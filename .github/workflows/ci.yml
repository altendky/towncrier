name: Run tests

on:
  push:
    branches: [ master ]
    tags:
      - "*"
  pull_request:
    branches: [ master ]

jobs:
  ci:
#    name: ${{ env.JOB_NAME }}
    name: ${{ matrix.task.name}} - ${{ matrix.python.name }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python:
          - name: CPython 2.7
            tox: py27
            action: 2.7
          - name: CPython 3.5
            tox: py35
            action: 3.5
          - name: CPython 3.6
            tox: py36
            action: 3.6
          - name: CPython 3.7
            tox: py37
            action: 3.7
        task:
          - name: Test
            tox: test
            type: test
        include:
          - python:
              name: CPython 3.6
              tox: py36
              action: 3.6
            task:
              - name: Flake8
                tox: flake8
                type: check
          - python:
              name: CPython 3.6
              tox: py36
              action: 3.6
            task:
              - name: Check Manifest
                tox: check-manifest
                type: check
          - python:
              name: CPython 3.6
              tox: py36
              action: 3.6
            task:
              - name: Check Newsfragment
                tox: check-newsfragment
                type: check

    env:
      CI_PLATFORM_NAME: "GitHub Actions"
      JOB_NAME: "${{ matrix.task.name}} - ${{ matrix.python.name }}"

    steps:
    - uses: actions/checkout@v2

    - name: Set up ${{ matrix.python.name }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python.action }}

    - name: Display Python information
      shell: python
      run: |
        from __future__ import print_function

        import os
        import struct
        import sys

        print(sys.version)
        print(sys.prefix)
        print(sys.exec_prefix)
        print(sys.executable)
        print(struct.calcsize('P') * 8)
        print('\nENVIRONMENT VARIABLES\n=====================\n\n')
        for name, value in sorted(os.environ.items()):
             print(repr(name), repr(value)

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml', 'setup.py',
          'setup.cfg', 'tox.ini') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox codecov
        tox --notest

    - name: Fetch master
      run: |
        git remote set-branches --add origin master
        git fetch origin master

    - name: Check
      if: ${{ matrix.task.type }} == "check"
      run: |
        tox -c tox.ini -e ${{ matrix.task.tox }}

    - name: Test
      if: ${{ matrix.task.type }} == "test"
      run: |
        tox -c tox.ini -e ${{ matrix.python.tox }}-tests

    - name: Codecov
      if: ${{ matrix.task.type }} == "test"
      run: |
        curl -o codecov.sh https://codecov.io/bash
        bash codecov.sh -n "${CI_PLATFORM_NAME} - ${JOB_NAME}"

  all:
    name: All
    runs-on: ubuntu-latest
    needs:
      - ci
    steps:
      - name: This
        shell: python
        run: |
          import this
